y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5) +
annotate(geom="text", x=3, y=1.5, label="pValue = 0.05",color="red")
g
p <- ggplot(Enrichment_resultsNHBE, aes(x = reorder(pathway, NES),
y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p
p +  annotate(geom="text", x=3, y=1.5, label="pValue = 0.05",color="red")
p +  annotate(geom="text", x=3, y=1.25, label="pValue = 0.05",color="red")
p +  annotate(geom="text", x=4, y=-log10(0.05), label="pValue = 0.05",
p +  annotate(geom="text", x=4, y=-log10(0.05), label="pValue = 0.05",
color="red", face= "bold")
p <- ggplot(Enrichment_resultsNHBE, aes(x = reorder(pathway, NES),
y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
dev.off()
p <- ggplot(Enrichment_resultsNHBE, aes(x = reorder(pathway, NES),
y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p +  annotate(geom="text", x=4, y=-log10(0.05), label="pValue = 0.05",
color="red", face= "bold")
?annotate
p +  annotate(geom="text", x=5, y=-log10(0.05), label="pValue = 0.05",
color="red", face= "bold")
p +  annotate(geom="text", x=3.5, y=-log10(0.05), label="pValue = 0.05",
color="red")
p +  annotate(geom="text", x=3.5, y=1.25, label="pValue = 0.05",
color="red")
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05",
color="red")
?annotate
?geom_text
Enrichment_resultsNHBE$leadingEdge
?annotate
Enrichment_resultsNHBE$leadingEdge[[1]]
p <- ggplot(Enrichment_resultsNHBE, aes(x = pathway, y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5) +
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black", alpha = 0.8,
Enrichment_resultsNHBE$leadingEdge[[1]])
p <- ggplot(Enrichment_resultsNHBE, aes(x = pathway, y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p
Enrichment_resultsNHBE
Enrichment_resultsNHBE$leadingEdge[[3]]
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black", alpha = 0.8,
Enrichment_resultsNHBE$leadingEdge[[3]])
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black", alpha = 0.8,
lable = head(Enrichment_resultsNHBE$leadingEdge[[3]]) )
p <- ggplot(Enrichment_resultsNHBE, aes(x = pathway, y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black", alpha = 0.8,
lable = head(Enrichment_resultsNHBE$leadingEdge[[3]]) )
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black", alpha = 0.8,
label = head(Enrichment_resultsNHBE$leadingEdge[[3]]) )
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black",
label = head(Enrichment_resultsNHBE$leadingEdge[[3]]) )
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black",
label = head(Enrichment_resultsNHBE$leadingEdge[[3]]), angle = 90)
head(Enrichment_resultsNHBE$leadingEdge[[3]])
string(head(Enrichment_resultsNHBE$leadingEdge[[3]]))
head(Enrichment_resultsNHBE$leadingEdge[[3]])
paste0(head(Enrichment_resultsNHBE$leadingEdge[[3]]))
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90)
?annotate
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, ymin = 0.25, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, ymin = 0.25, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = -0.25, ymin = 0.25, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90)
?annotate
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.25, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.45, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.40, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90)
Enrichment_resultsNHBE
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.40, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 1, y = 0.40, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.40, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 2, y = 0.40, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 2, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90)
### Investigate cell cycle things.
library(fgsea)
library(ggplot2)
library(dplyr)
library(tibble)
setwd("/home/alvaldeolivas/Documents/GitHub/Saezlab/Covid19/")
## We read pathways from MsigDb
G2M <- GSEABase::getGmt("RawData/HALLMARK_G2M_CHECKPOINT.gmt") # src: MsigDB
CellCycle <- GSEABase::getGmt("RawData/KEGG_CELL_CYCLE.gmt")
CellCycleArrest <- GSEABase::getGmt("RawData/GO_CELL_CYCLE_ARREST.gmt")
## NHBE cell line
## We read the stasts from the tests.
dds_results_NHBEvsCOV2 <-
readRDS("IntermediateFiles/dds_results_NHBEvsCOV2.rds") %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "GeneID") %>%
dplyr::filter(!is.na(stat)) %>%
dplyr::select(GeneID, stat) %>%
tibble::column_to_rownames(var = "GeneID")
Ranks_NHBEvsCOV2 <- dds_results_NHBEvsCOV2$stat
names(Ranks_NHBEvsCOV2) <- rownames(dds_results_NHBEvsCOV2)
fgseaRes_G2M_NHBE <-
fgsea(GSEABase::geneIds(G2M), Ranks_NHBEvsCOV2, nperm=10000)
fgseaRes_CellCycle_NHBE  <-
fgsea(GSEABase::geneIds(CellCycle), Ranks_NHBEvsCOV2, nperm=10000)
fgseaRes_CellCycleArrest_NHBE  <-
fgsea(GSEABase::geneIds(CellCycleArrest), Ranks_NHBEvsCOV2, nperm=10000)
Enrichment_resultsNHBE <- as.data.frame(bind_rows(fgseaRes_G2M_NHBE,
fgseaRes_CellCycle_NHBE,fgseaRes_CellCycleArrest_NHBE) )
p <- ggplot(Enrichment_resultsNHBE, aes(x = pathway, y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="red") +
annotate(geom = "text", x = 1, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 2, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90) +
annotate(geom = "text", x = 3, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[2]])),
angle = 90)
p +  annotate(geom="text", x=3, y=1.35, label="pValue = 0.05", color="black") +
annotate(geom = "text", x = 1, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 2, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90) +
annotate(geom = "text", x = 3, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[2]])),
angle = 90)
p +  annotate(geom="text", x=1, y=1.35, label="pValue = 0.05", color="black") +
annotate(geom = "text", x = 1, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 2, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90) +
annotate(geom = "text", x = 3, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[2]])),
angle = 90)
dds_results_A549vsCOV2 <-
readRDS("IntermediateFiles/dds_results_A549vsCOV2.rds") %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "GeneID") %>%
dplyr::filter(!is.na(stat)) %>%
dplyr::select(GeneID, stat) %>%
tibble::column_to_rownames(var = "GeneID")
Ranks_A549vsCOV2 <- dds_results_A549vsCOV2$stat
names(Ranks_A549vsCOV2) <- rownames(dds_results_A549vsCOV2)
fgseaRes_G2M_A549 <-
fgsea(GSEABase::geneIds(G2M), Ranks_A549vsCOV2, nperm=10000)
fgseaRes_CellCycle_A549  <-
fgsea(GSEABase::geneIds(CellCycle), Ranks_A549vsCOV2, nperm=10000)
fgseaRes_CellCycleArrest_A549  <-
fgsea(GSEABase::geneIds(CellCycleArrest), Ranks_A549vsCOV2, nperm=10000)
Enrichment_resultsA549 <- as.data.frame(bind_rows(fgseaRes_G2M_A549,
fgseaRes_CellCycle_A549,fgseaRes_CellCycleArrest_A549) )
p <- ggplot(Enrichment_resultsA549, aes(x = pathway, y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p
Enrichment_resultsA549
Enrichment_resultsNHBE
Ranks_A549vsCOV2
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
# install_github("saezlab/progeny")
# install_github("saezlab/dorothea")
library(progeny)
library(dorothea)
library(tibble)
library(tidyr)
library(dplyr)
library(ggplot2)
library(pheatmap)
## Differential expression table
dds_NHBEvsCOV2 <- readRDS("IntermediateFiles/dds_results_NHBEvsCOV2.rds")
dds_A549vsCOV2 <- readRDS("IntermediateFiles/dds_results_A549vsCOV2.rds")
norm_counts_NHBEvsCOV2 <-
readRDS("IntermediateFiles/counts_norm_NHBEvsCOV2.rds")
norm_counts_A549vsCOV2 <-
readRDS("IntermediateFiles/counts_norm_A549vsCOV2.rds")
pathways_NHBEvsCOV2_counts <- progeny(norm_counts_NHBEvsCOV2, scale=TRUE,
organism="Human", top = 100)
activities_NHBEvsCOV2 <- as.vector(pathways_NHBEvsCOV2_counts)
paletteLength <- 100
myColor <-
colorRampPalette(c("darkblue", "whitesmoke","indianred"))(paletteLength)
progenyBreaks <- c(seq(min(activities_NHBEvsCOV2), 0,
length.out=ceiling(paletteLength/2) + 1),
seq(max(activities_NHBEvsCOV2)/paletteLength,
max(activities_NHBEvsCOV2),
length.out=floor(paletteLength/2)))
progeny_hmap <- pheatmap(t(pathways_NHBEvsCOV2_counts),fontsize=14,
fontsize_row = 10, fontsize_col = 10,
color=myColor, breaks = progenyBreaks,
main = "PROGENy (100)", angle_col = 45,
treeheight_col = 0,  border_color = NA)
dds_NHBEvsCOV2_df <- as.data.frame(dds_NHBEvsCOV2) %>%
rownames_to_column(var = "GeneID") %>%
dplyr::select(GeneID, stat) %>%
dplyr::filter(!is.na(stat)) %>%
column_to_rownames(var = "GeneID")
pathways_NHBEvsCOV2_zscore <- t(progeny(as.matrix(dds_NHBEvsCOV2_df),
scale=TRUE, organism="Human", top = 100, perm = 10000, z_scores = TRUE))
colnames(pathways_NHBEvsCOV2_zscore) <- "NES"
## I also need to run progeny in such a way to have values between 1 and -1 to
## use as CARNIVAL input
pathways_NHBEvsCOV2_zscore_inputCarnival <-
t(progeny(as.matrix(dds_NHBEvsCOV2_df),
scale=TRUE, organism="Human", top = 100, perm = 10000, z_scores = FALSE))
colnames(pathways_NHBEvsCOV2_zscore_inputCarnival) <- "Activity"
pathways_NHBEvsCOV2_zscore_df <- as.data.frame(pathways_NHBEvsCOV2_zscore) %>%
rownames_to_column(var = "Pathway") %>%
dplyr::arrange(NES) %>%
dplyr::mutate(Pathway = factor(Pathway))
ggplot(pathways_NHBEvsCOV2_zscore_df,aes(x = reorder(Pathway, NES), y = NES)) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "darkblue", high = "indianred",
mid = "whitesmoke", midpoint = 0) +
theme_minimal() +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x =
element_text(angle = 45, hjust = 1, size =10, face= "bold"),
axis.text.y = element_text(size =10, face= "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("Pathways")
pathways_A549vsCOV2_counts <- progeny(norm_counts_A549vsCOV2, scale=TRUE,
organism="Human", top = 100)
activities_A549vsCOV2 <- as.vector(pathways_A549vsCOV2_counts)
paletteLength <- 100
myColor <-
colorRampPalette(c("darkblue", "whitesmoke","indianred"))(paletteLength)
progenyBreaks <- c(seq(min(activities_A549vsCOV2), 0,
length.out=ceiling(paletteLength/2) + 1),
seq(max(activities_A549vsCOV2)/paletteLength,
max(activities_A549vsCOV2),
length.out=floor(paletteLength/2)))
progeny_hmap <- pheatmap(t(pathways_A549vsCOV2_counts),fontsize=14,
fontsize_row = 10, fontsize_col = 10,
color=myColor, breaks = progenyBreaks,
main = "PROGENy (100)", angle_col = 45,
treeheight_col = 0,  border_color = NA)
dds_A549vsCOV2_df <- as.data.frame(dds_A549vsCOV2) %>%
rownames_to_column(var = "GeneID") %>%
dplyr::select(GeneID, stat) %>%
dplyr::filter(!is.na(stat)) %>%
column_to_rownames(var = "GeneID")
pathways_A549vsCOV2_zscore <- t(progeny(as.matrix(dds_A549vsCOV2_df),
scale=TRUE, organism="Human", top = 100, perm = 10000, z_scores = TRUE))
colnames(pathways_A549vsCOV2_zscore) <- "NES"
## I also need to run progeny in such a way to have values between 1 and -1 to
## use as CARNIVAL input
pathways_A549vsCOV2_zscore_inputCarnival <-
t(progeny(as.matrix(dds_A549vsCOV2_df),
scale=TRUE, organism="Human", top = 100, perm = 10000, z_scores = FALSE))
colnames(pathways_A549vsCOV2_zscore_inputCarnival) <- "Activity"
pathways_A549vsCOV2_zscore_df <- as.data.frame(pathways_A549vsCOV2_zscore) %>%
rownames_to_column(var = "Pathway") %>%
dplyr::arrange(NES) %>%
dplyr::mutate(Pathway = factor(Pathway))
ggplot(pathways_A549vsCOV2_zscore_df,aes(x = reorder(Pathway, NES), y = NES)) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "darkblue", high = "indianred",
mid = "whitesmoke", midpoint = 0) +
theme_minimal() +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x =
element_text(angle = 45, hjust = 1, size =10, face= "bold"),
axis.text.y = element_text(size =10, face= "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("Pathways")
## We load Dorothea Regulons
data(dorothea_hs, package = "dorothea")
regulons <- dorothea_hs %>%
dplyr::filter(confidence %in% c("A", "B","C"))
dds_NHBEvsCOV2_stat <-  as.data.frame(dds_NHBEvsCOV2) %>%
rownames_to_column(var = "GeneID") %>%
dplyr::select(GeneID, stat) %>%
dplyr::filter(!is.na(stat)) %>%
column_to_rownames(var = "GeneID") %>%
as.matrix()
tf_activities_NHBEvsCOV2_stat <-
dorothea::run_viper(as.matrix(dds_NHBEvsCOV2_stat), regulons,
options =  list(minsize = 5, eset.filter = FALSE,
cores = 1, verbose = FALSE, nes = TRUE))
tf_activities_NHBEvsCOV2_top25 <- tf_activities_NHBEvsCOV2_stat %>%
as.data.frame() %>%
rownames_to_column(var = "GeneID") %>%
dplyr::rename(NES = "stat") %>%
dplyr::top_n(25, wt = abs(NES)) %>%
dplyr::arrange(NES) %>%
dplyr::mutate(GeneID = factor(GeneID))
ggplot(tf_activities_NHBEvsCOV2_top25,aes(x = reorder(GeneID, NES), y = NES)) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "darkblue", high = "indianred",
mid = "whitesmoke", midpoint = 0) +
theme_minimal() +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x =
element_text(angle = 45, hjust = 1, size =10, face= "bold"),
axis.text.y = element_text(size =10, face= "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("Transcription Factors")
tf_activities_NHBEvsCOV2_counts <-
dorothea::run_viper(norm_counts_NHBEvsCOV2, regulons,
options =  list(minsize = 5, eset.filter = FALSE,
cores = 1, verbose = FALSE, method = c("scale")))
tf_activities_NHBEvsCOV2_counts_filter <- tf_activities_NHBEvsCOV2_counts %>%
as.data.frame() %>%
rownames_to_column(var = "GeneID") %>%
dplyr::filter(GeneID %in% tf_activities_NHBEvsCOV2_top25$GeneID) %>%
column_to_rownames(var = "GeneID") %>%
as.matrix()
tf_activities_NHBEvsCOV2_counts_filter
tf_activities_NHBEvsCOV2_counts_filter["STAT2",]
tf_activities_NHBEvsCOV2 <- as.vector(tf_activities_NHBEvsCOV2_counts_filter)
paletteLength <- 100
myColor <-
colorRampPalette(c("darkblue", "whitesmoke","indianred"))(paletteLength)
dorotheaBreaks <- c(seq(min(tf_activities_NHBEvsCOV2), 0,
length.out=ceiling(paletteLength/2) + 1),
seq(max(tf_activities_NHBEvsCOV2)/paletteLength,
max(tf_activities_NHBEvsCOV2),
length.out=floor(paletteLength/2)))
dorothea_hmap <- pheatmap(tf_activities_NHBEvsCOV2_counts_filter,
fontsize=14, fontsize_row = 8, fontsize_col = 8,
color=myColor, breaks = dorotheaBreaks,,
main = "Dorothea ABC", angle_col = 45,
treeheight_col = 0,  border_color = NA)
### Investigate cell cycle things.
library(fgsea)
library(ggplot2)
library(dplyr)
library(tibble)
setwd("/home/alvaldeolivas/Documents/GitHub/Saezlab/Covid19/")
## We read pathways from MsigDb
G2M <- GSEABase::getGmt("RawData/HALLMARK_G2M_CHECKPOINT.gmt") # src: MsigDB
CellCycle <- GSEABase::getGmt("RawData/KEGG_CELL_CYCLE.gmt")
CellCycleArrest <- GSEABase::getGmt("RawData/GO_CELL_CYCLE_ARREST.gmt")
## NHBE cell line
## We read the stasts from the tests.
dds_results_NHBEvsCOV2 <-
readRDS("IntermediateFiles/dds_results_NHBEvsCOV2.rds") %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "GeneID") %>%
dplyr::filter(!is.na(stat)) %>%
dplyr::select(GeneID, stat) %>%
tibble::column_to_rownames(var = "GeneID")
Ranks_NHBEvsCOV2 <- dds_results_NHBEvsCOV2$stat
names(Ranks_NHBEvsCOV2) <- rownames(dds_results_NHBEvsCOV2)
fgseaRes_G2M_NHBE <-
fgsea(GSEABase::geneIds(G2M), Ranks_NHBEvsCOV2, nperm=10000)
fgseaRes_CellCycle_NHBE  <-
fgsea(GSEABase::geneIds(CellCycle), Ranks_NHBEvsCOV2, nperm=10000)
fgseaRes_CellCycleArrest_NHBE  <-
fgsea(GSEABase::geneIds(CellCycleArrest), Ranks_NHBEvsCOV2, nperm=10000)
Enrichment_resultsNHBE <- as.data.frame(bind_rows(fgseaRes_G2M_NHBE,
fgseaRes_CellCycle_NHBE,fgseaRes_CellCycleArrest_NHBE) )
p <- ggplot(Enrichment_resultsNHBE, aes(x = pathway, y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p +  annotate(geom="text", x=1, y=1.35, label="pValue = 0.05", color="black") +
annotate(geom = "text", x = 1, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 2, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90) +
annotate(geom = "text", x = 3, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[2]])),
angle = 90)
## A549 cell line
dds_results_A549vsCOV2 <-
readRDS("IntermediateFiles/dds_results_A549vsCOV2.rds") %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "GeneID") %>%
dplyr::filter(!is.na(stat)) %>%
dplyr::select(GeneID, stat) %>%
tibble::column_to_rownames(var = "GeneID")
Ranks_A549vsCOV2 <- dds_results_A549vsCOV2$stat
names(Ranks_A549vsCOV2) <- rownames(dds_results_A549vsCOV2)
fgseaRes_G2M_A549 <-
fgsea(GSEABase::geneIds(G2M), Ranks_A549vsCOV2, nperm=10000)
fgseaRes_CellCycle_A549  <-
fgsea(GSEABase::geneIds(CellCycle), Ranks_A549vsCOV2, nperm=10000)
fgseaRes_CellCycleArrest_A549  <-
fgsea(GSEABase::geneIds(CellCycleArrest), Ranks_A549vsCOV2, nperm=10000)
Enrichment_resultsA549 <- as.data.frame(bind_rows(fgseaRes_G2M_A549,
fgseaRes_CellCycle_A549,fgseaRes_CellCycleArrest_A549) )
p <- ggplot(Enrichment_resultsA549, aes(x = pathway, y = -log10(padj))) +
geom_bar(aes(fill = NES), stat = "identity") +
scale_fill_gradient2(low = "indianred", midpoint = 0,
high = "steelblue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10,
face = "bold")) +
xlab("") +
geom_hline(yintercept = -log10(0.05), size = 1.5)
p +  annotate(geom="text", x=1, y=1.35, label="pValue = 0.05", color="black") +
annotate(geom = "text", x = 1, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[3]])),
angle = 90) +
annotate(geom = "text", x = 2, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[1]])),
angle = 90) +
annotate(geom = "text", x = 3, y = 0.50, color ="black",
label = toString(head(Enrichment_resultsNHBE$leadingEdge[[2]])),
angle = 90)
